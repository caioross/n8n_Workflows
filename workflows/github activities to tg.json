{
  "id": 6,
  "name": "github activities to tg",
  "active": true,
  "nodes": [
    {
      "parameters": {},
      "id": "5ff228ae-9390-4d30-972d-5fbcdcb7bc74",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        440,
        320
      ]
    },
    {
      "parameters": {
        "url": "https://github.com/reorx.atom"
      },
      "name": "RSS Feed Read",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [
        660,
        440
      ],
      "id": "7714f0d5-f40b-493e-b09d-d6687a8b1213"
    },
    {
      "parameters": {
        "functionCode": "/* only return new items */\nconst staticData = getWorkflowStaticData('global');\nconst lastItemId = staticData.lastItemId;\n\nconsole.log('lastItemId', lastItemId);\nconst firstItem = items[0];\nlet newItems = [];\n\nfunction getId(item) {\n  return item.json.guid;\n}\n\nif (lastItemId) {\n  for (const item of items) {\n    if (getId(item) === lastItemId) {\n      break;\n    }\n    newItems.push(item)\n  }\n} else {\n  newItems = [firstItem]\n}\n\nstaticData.lastItemId = getId(firstItem)\nreturn newItems.reverse();"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1000,
        440
      ],
      "id": "df920fe2-a42a-4632-bbd1-c0794672a1f5"
    },
    {
      "parameters": {
        "chatId": "@reorx_share",
        "text": "={{$json[\"tgTitle\"]}}\n\n{{$json[\"link\"]}}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        1160,
        600
      ],
      "id": "af0affdb-a197-43fd-ac42-6c3ad3a1b061",
      "credentials": {
        "telegramApi": {
          "id": "8",
          "name": "Telegram reorx_share_bot"
        }
      }
    },
    {
      "parameters": {
        "interval": 30,
        "unit": "minutes"
      },
      "name": "Interval",
      "type": "n8n-nodes-base.interval",
      "typeVersion": 1,
      "position": [
        440,
        600
      ],
      "id": "f0e0f084-0166-4a59-b321-c7616ecbeca4"
    },
    {
      "parameters": {
        "functionCode": "/* filter items */\nconst newItems = [];\n\nconst regexes = {\n  'star': /^reorx starred/,\n  'pull-request': /^reorx opened a pull request/,\n  'issue': /^reorx opened an issue/,\n}\nconst tagSymbols = {\n  'star': 'üåü',\n  'pull-request': '‚§¥Ô∏è',\n  'issue': '‚ö°Ô∏è'\n}\n\nfor (const item of items) {\n  const title = item.json.title\n  let tag = ''\n\n  for (const key in regexes) {\n    const regex = regexes[key]\n    if (regex.test(title)) {\n      tag = key\n      break\n    }\n  }\n  if (tag !== '') {\n    item.json.tag = tag\n    item.json.tgTitle = `${tagSymbols[tag]} ${title.replace(/^reorx /, '')} #github #${tag}`\n    item.json.guid = item.json.id\n    newItems.push(item)\n  }\n}\n\nreturn newItems"
      },
      "name": "Function filter",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        840,
        600
      ],
      "id": "0742b8dc-45e6-4de4-94b2-e8379b5a633a"
    }
  ],
  "connections": {
    "RSS Feed Read": {
      "main": [
        [
          {
            "node": "Function filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Interval": {
      "main": [
        [
          {
            "node": "RSS Feed Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function filter": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-09-11T01:31:42.749Z",
  "updatedAt": "2022-11-06T05:45:27.918Z",
  "settings": {},
  "staticData": {
    "global": {}
  }
}