{
  "id": 3812,
  "name": "Standardize US Phone Numbers with Multiple Format Options and Validation",
  "views": 0,
  "recentViews": 0,
  "totalViews": 0,
  "createdAt": "2025-05-01T04:03:14.963Z",
  "description": "## Workflow Overview:\n\nThis n8n workflow template takes a US phone number as input, validates it, and returns it in multiple standard formats, including handling extensions. It's designed to streamline the process of standardizing phone number data within your automations.\n\n## How it Works:\n\n**Input:** Accepts a phone number string as input. This number can be in various common formats (e.g., `(555) 123-4567`, `555.123.4567`, `+15551234567`, `5551234567x890`).\n\n**Formatting Removal:** Strips all non-numeric characters to isolate the core number and any potential extension.\n\n**Validation:**\n\n- **Country Code Check:** Verifies if the number starts with the US country code (`+1` or `1`) or assumes US if no country code is present and the length is correct.\n\n- **Length Check:** Ensures the main number component consists of exactly 10 digits after stripping formatting and the country code.\n\n**Output Generation (if valid):** If the number passes validation, the workflow outputs the phone number in several standardized formats:\n\n- **Number Only:** 5551234567\n\n- **E.164 Standard:** +15551234567\n\n- **National Standard:** (555) 123-4567\n\n- **Full National Standard:** 1 (555) 123-4567\n\n- **International Standard:** 00-1-555-123-4567\n\n**Extension Handling:** If an extension is detected in the input, it is separated and provided as:\n\n- **Extension (Number):** 890\n\n- **Extension (String):** \"890\"\n\n**Use Cases:**\n\n- Cleaning and standardizing phone number data in CRM systems.\n\n- Formatting numbers before sending SMS messages via APIs.\n\n- Validating user input from forms.\n\n- Ensuring consistent phone number representation across different applications.",
  "workflow": {
    "id": "mNbQmMNEvpiZqASG",
    "meta": {
      "instanceId": "f80e038bf7b8c99e3db7e7d6a34de2c19f0af25e5d7445b15c36d79b6e8e9e55"
    },
    "name": "Format US Phone Number",
    "tags": [],
    "nodes": [
      {
        "id": "bf150da4-5e01-4571-a606-10a0fb25004b",
        "name": "When Executed by Another Workflow",
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "position": [
          0,
          275
        ],
        "parameters": {
          "workflowInputs": {
            "values": [
              {
                "name": "Phone Number",
                "type": "any"
              }
            ]
          }
        },
        "typeVersion": 1.1
      },
      {
        "id": "7c560ecf-c827-413f-a115-7b6bc8f21a41",
        "name": "Check if first digit is valid country code",
        "type": "n8n-nodes-base.if",
        "position": [
          660,
          275
        ],
        "parameters": {
          "options": {},
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "4d5c838e-9b08-4466-b00d-c695fd76d66d",
                "operator": {
                  "type": "number",
                  "operation": "equals"
                },
                "leftValue": "={{ $json['Phone Number'].toString().slice(0,1).toNumber() }}",
                "rightValue": 1
              }
            ]
          }
        },
        "typeVersion": 2.2
      },
      {
        "id": "783d8fd0-2a38-41fc-87c9-b0aec9933070",
        "name": "Add valid country code",
        "type": "n8n-nodes-base.set",
        "position": [
          880,
          475
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "e47a1812-f69c-4182-bed5-cf037071cd9b",
                "name": "Phone Number",
                "type": "number",
                "value": "=1{{ $json['Phone Number'] }}"
              }
            ]
          }
        },
        "typeVersion": 3.4
      },
      {
        "id": "a93923f3-5d8d-4617-a63d-50b66b3b1128",
        "name": "Strip phone number formatting",
        "type": "n8n-nodes-base.set",
        "position": [
          220,
          275
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "91d348df-6937-4118-8f7b-c9d386eb5c21",
                "name": "Phone Number",
                "type": "number",
                "value": "={{ $json['Phone Number'].match(/[0-9]+/gmi).join('') }}"
              }
            ]
          }
        },
        "typeVersion": 3.4
      },
      {
        "id": "58d6d280-ec86-4b69-a89c-e43571ce1035",
        "name": "Check number of digits in phone number",
        "type": "n8n-nodes-base.switch",
        "position": [
          440,
          254
        ],
        "parameters": {
          "rules": {
            "values": [
              {
                "outputKey": "Full Number",
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "66c9d1e7-dc56-4ce8-b7e4-64274feb8750",
                      "operator": {
                        "type": "number",
                        "operation": "gte"
                      },
                      "leftValue": "={{ $json['Phone Number'].toString().length }}",
                      "rightValue": 11
                    }
                  ]
                },
                "renameOutput": true
              },
              {
                "outputKey": "Number",
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "2b9be422-2c4d-402a-b598-e8ab55aa5196",
                      "operator": {
                        "type": "number",
                        "operation": "equals"
                      },
                      "leftValue": "={{ $json['Phone Number'].toString().length }}",
                      "rightValue": 10
                    }
                  ]
                },
                "renameOutput": true
              },
              {
                "outputKey": "Invalid Number",
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "a442130a-f2f8-4399-8edb-180d3607ec9b",
                      "operator": {
                        "type": "number",
                        "operation": "lt"
                      },
                      "leftValue": "={{ $json['Phone Number'].toString().length }}",
                      "rightValue": 10
                    }
                  ]
                },
                "renameOutput": true
              },
              {
                "outputKey": "Not a Number",
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "efba5af9-dfe4-47f0-8e82-253accd4f238",
                      "operator": {
                        "type": "number",
                        "operation": "notExists",
                        "singleValue": true
                      },
                      "leftValue": "={{ $json['Phone Number'] }}",
                      "rightValue": ""
                    }
                  ]
                },
                "renameOutput": true
              }
            ]
          },
          "options": {}
        },
        "typeVersion": 3.2
      },
      {
        "id": "1f6a4aa7-0595-4db3-a9c3-dc7a72656597",
        "name": "Format phone numbers",
        "type": "n8n-nodes-base.set",
        "position": [
          1100,
          325
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "402c8481-3dee-4b90-8a08-7e611156d012",
                "name": "Phone Number (Input)",
                "type": "string",
                "value": "={{ $('When Executed by Another Workflow').item.json['Phone Number'] }}"
              },
              {
                "id": "9bc193b1-664f-40c0-8545-6792b5599777",
                "name": "Phone Number",
                "type": "number",
                "value": "={{ $json['Phone Number'].toString().slice(0,11).toNumber() }}"
              },
              {
                "id": "a4944be5-bfd5-4804-aeb5-d84c59145485",
                "name": "=Phone Number (E-164)",
                "type": "string",
                "value": "={{ $json['Phone Number'] ? '+' + $json['Phone Number'] : '' }}"
              },
              {
                "id": "3a8d506c-45ba-4843-b186-78bf877b7903",
                "name": "Phone Number (National)",
                "type": "string",
                "value": "={{ $json['Phone Number'] ? '(' + $json['Phone Number'].toString().slice(1,4) + ') ' + $json['Phone Number'].toString().slice(4,7) + '-' + $json['Phone Number'].toString().slice(7,11) : '' }}"
              },
              {
                "id": "14daf876-5f94-44d7-915b-bc4a8d6afbc4",
                "name": "Phone Number (Full National)",
                "type": "string",
                "value": "={{ $json['Phone Number'] ? '1 (' + $json['Phone Number'].toString().slice(1,4) + ') ' + $json['Phone Number'].toString().slice(4,7) + '-' + $json['Phone Number'].toString().slice(7,11) : '' }}"
              },
              {
                "id": "3270cc41-bfd7-4c5d-a05e-4af8da028bd5",
                "name": "Phone Number (International)",
                "type": "string",
                "value": "={{ $json['Phone Number'] ? '00-1-' + $json['Phone Number'].toString().slice(1,4) + '-' + $json['Phone Number'].toString().slice(4,7) + '-' + $json['Phone Number'].toString().slice(7,11) : '' }}"
              },
              {
                "id": "a6bd3652-071f-41b6-b523-bca427ef54f5",
                "name": "Extension",
                "type": "number",
                "value": "={{ $json['Phone Number'].toString().slice(11).toNumber() }}"
              },
              {
                "id": "7b808bfb-0d69-410c-b8f4-cbf2cafcf7e8",
                "name": "Extension (String)",
                "type": "string",
                "value": "={{ $json['Phone Number'].toString().slice(11).toNumber() > 0 ? $json['Phone Number'].toString().slice(11).toNumber() : '' }}"
              }
            ]
          }
        },
        "typeVersion": 3.4
      },
      {
        "id": "7bc3c1a0-2056-48a0-b826-21a8c1bff31b",
        "name": "Clear invalid number",
        "type": "n8n-nodes-base.set",
        "position": [
          880,
          125
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "c8d90980-61c9-49c5-8769-32c445790328",
                "name": "Phone Number",
                "type": "string",
                "value": ""
              }
            ]
          },
          "includeOtherFields": true
        },
        "typeVersion": 3.4
      }
    ],
    "active": false,
    "pinData": {
      "When Executed by Another Workflow": [
        {
          "json": {
            "Phone Number": "1-800-555-5555"
          }
        },
        {
          "json": {
            "Phone Number": "1.800.555.5555"
          }
        },
        {
          "json": {
            "Phone Number": "800.555.5555"
          }
        },
        {
          "json": {
            "Phone Number": "1.800.555.55551234"
          }
        },
        {
          "json": {
            "Phone Number": "1(800)555-55"
          }
        },
        {
          "json": {
            "Phone Number": "5(800)555-5555"
          }
        },
        {
          "json": {
            "Phone Number": "1(800)555-5555 extension 1234"
          }
        },
        {
          "json": {
            "Phone Number": "A string"
          }
        }
      ]
    },
    "settings": {
      "executionOrder": "v1"
    },
    "versionId": "1b7626d5-b32b-41bd-989a-a79616769278",
    "connections": {
      "Clear invalid number": {
        "main": [
          [
            {
              "node": "Format phone numbers",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Format phone numbers": {
        "main": [
          []
        ]
      },
      "Add valid country code": {
        "main": [
          [
            {
              "node": "Format phone numbers",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Strip phone number formatting": {
        "main": [
          [
            {
              "node": "Check number of digits in phone number",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Strip phone number formatting",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check number of digits in phone number": {
        "main": [
          [
            {
              "node": "Check if first digit is valid country code",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Add valid country code",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Clear invalid number",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Clear invalid number",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check if first digit is valid country code": {
        "main": [
          [
            {
              "node": "Format phone numbers",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Clear invalid number",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    }
  },
  "lastUpdatedBy": 29,
  "workflowInfo": {
    "nodeCount": 7,
    "nodeTypes": {
      "n8n-nodes-base.if": {
        "count": 1
      },
      "n8n-nodes-base.set": {
        "count": 4
      },
      "n8n-nodes-base.switch": {
        "count": 1
      },
      "n8n-nodes-base.executeWorkflowTrigger": {
        "count": 1
      }
    }
  },
  "user": {
    "name": "Sunny Thaper",
    "username": "sunnythaper",
    "bio": "",
    "verified": false,
    "links": [
      ""
    ],
    "avatar": "https://gravatar.com/avatar/76b8e83f01f685b73ff6c242c4ef1af9fb62c32fc4686b51b6ae732e225045b3?r=pg&d=retro&size=200"
  },
  "nodes": [
    {
      "id": 20,
      "icon": "fa:map-signs",
      "name": "n8n-nodes-base.if",
      "codex": {
        "data": {
          "alias": [
            "Router",
            "Filter",
            "Condition",
            "Logic",
            "Boolean",
            "Branch"
          ],
          "details": "The IF node can be used to implement binary conditional logic in your workflow. You can set up one-to-many conditions to evaluate each item of data being inputted into the node. That data will either evaluate to TRUE or FALSE and route out of the node accordingly.\n\nThis node has multiple types of conditions: Bool, String, Number, and Date & Time.",
          "resources": {
            "generic": [
              {
                "url": "https://n8n.io/blog/learn-to-automate-your-factorys-incident-reporting-a-step-by-step-guide/",
                "icon": "🏭",
                "label": "Learn to Automate Your Factory's Incident Reporting: A Step by Step Guide"
              },
              {
                "url": "https://n8n.io/blog/2021-the-year-to-automate-the-new-you-with-n8n/",
                "icon": "☀️",
                "label": "2021: The Year to Automate the New You with n8n"
              },
              {
                "url": "https://n8n.io/blog/why-business-process-automation-with-n8n-can-change-your-daily-life/",
                "icon": "🧬",
                "label": "Why business process automation with n8n can change your daily life"
              },
              {
                "url": "https://n8n.io/blog/create-a-toxic-language-detector-for-telegram/",
                "icon": "🤬",
                "label": "Create a toxic language detector for Telegram in 4 step"
              },
              {
                "url": "https://n8n.io/blog/no-code-ecommerce-workflow-automations/",
                "icon": "store",
                "label": "6 e-commerce workflows to power up your Shopify s"
              },
              {
                "url": "https://n8n.io/blog/how-to-build-a-low-code-self-hosted-url-shortener/",
                "icon": "🔗",
                "label": "How to build a low-code, self-hosted URL shortener in 3 steps"
              },
              {
                "url": "https://n8n.io/blog/automate-your-data-processing-pipeline-in-9-steps-with-n8n/",
                "icon": "⚙️",
                "label": "Automate your data processing pipeline in 9 steps"
              },
              {
                "url": "https://n8n.io/blog/how-to-get-started-with-crm-automation-and-no-code-workflow-ideas/",
                "icon": "👥",
                "label": "How to get started with CRM automation (with 3 no-code workflow ideas"
              },
              {
                "url": "https://n8n.io/blog/5-tasks-you-can-automate-with-notion-api/",
                "icon": "⚡️",
                "label": "5 tasks you can automate with the new Notion API "
              },
              {
                "url": "https://n8n.io/blog/automate-google-apps-for-productivity/",
                "icon": "💡",
                "label": "15 Google apps you can combine and automate to increase productivity"
              },
              {
                "url": "https://n8n.io/blog/automation-for-maintainers-of-open-source-projects/",
                "icon": "🏷️",
                "label": "How to automatically manage contributions to open-source projects"
              },
              {
                "url": "https://n8n.io/blog/how-uproc-scraped-a-multi-page-website-with-a-low-code-workflow/",
                "icon": " 🕸️",
                "label": "How uProc scraped a multi-page website with a low-code workflow"
              },
              {
                "url": "https://n8n.io/blog/5-workflow-automations-for-mattermost-that-we-love-at-n8n/",
                "icon": "🤖",
                "label": "5 workflow automations for Mattermost that we love at n8n"
              },
              {
                "url": "https://n8n.io/blog/why-this-product-manager-loves-workflow-automation-with-n8n/",
                "icon": "🧠",
                "label": "Why this Product Manager loves workflow automation with n8n"
              },
              {
                "url": "https://n8n.io/blog/sending-automated-congratulations-with-google-sheets-twilio-and-n8n/",
                "icon": "🙌",
                "label": "Sending Automated Congratulations with Google Sheets, Twilio, and n8n "
              },
              {
                "url": "https://n8n.io/blog/how-to-set-up-a-ci-cd-pipeline-with-no-code/",
                "icon": "🎡",
                "label": "How to set up a no-code CI/CD pipeline with GitHub and TravisCI"
              },
              {
                "url": "https://n8n.io/blog/benefits-of-automation-and-n8n-an-interview-with-hubspots-hugh-durkin/",
                "icon": "🎖",
                "label": "Benefits of automation and n8n: An interview with HubSpot's Hugh Durkin"
              },
              {
                "url": "https://n8n.io/blog/aws-workflow-automation/",
                "label": "7 no-code workflow automations for Amazon Web Services"
              }
            ],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Flow"
            ]
          }
        }
      },
      "group": "[\"transform\"]",
      "defaults": {
        "name": "If",
        "color": "#408000"
      },
      "iconData": {
        "icon": "map-signs",
        "type": "icon"
      },
      "displayName": "If",
      "typeVersion": 2,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 38,
      "icon": "fa:pen",
      "name": "n8n-nodes-base.set",
      "codex": {
        "data": {
          "alias": [
            "Set",
            "JS",
            "JSON",
            "Filter",
            "Transform",
            "Map"
          ],
          "resources": {
            "generic": [
              {
                "url": "https://n8n.io/blog/learn-to-automate-your-factorys-incident-reporting-a-step-by-step-guide/",
                "icon": "🏭",
                "label": "Learn to Automate Your Factory's Incident Reporting: A Step by Step Guide"
              },
              {
                "url": "https://n8n.io/blog/2021-the-year-to-automate-the-new-you-with-n8n/",
                "icon": "☀️",
                "label": "2021: The Year to Automate the New You with n8n"
              },
              {
                "url": "https://n8n.io/blog/automatically-pulling-and-visualizing-data-with-n8n/",
                "icon": "📈",
                "label": "Automatically pulling and visualizing data with n8n"
              },
              {
                "url": "https://n8n.io/blog/database-monitoring-and-alerting-with-n8n/",
                "icon": "📡",
                "label": "Database Monitoring and Alerting with n8n"
              },
              {
                "url": "https://n8n.io/blog/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n/",
                "icon": "🧾",
                "label": "Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n"
              },
              {
                "url": "https://n8n.io/blog/no-code-ecommerce-workflow-automations/",
                "icon": "store",
                "label": "6 e-commerce workflows to power up your Shopify s"
              },
              {
                "url": "https://n8n.io/blog/how-to-build-a-low-code-self-hosted-url-shortener/",
                "icon": "🔗",
                "label": "How to build a low-code, self-hosted URL shortener in 3 steps"
              },
              {
                "url": "https://n8n.io/blog/automate-your-data-processing-pipeline-in-9-steps-with-n8n/",
                "icon": "⚙️",
                "label": "Automate your data processing pipeline in 9 steps"
              },
              {
                "url": "https://n8n.io/blog/how-to-get-started-with-crm-automation-and-no-code-workflow-ideas/",
                "icon": "👥",
                "label": "How to get started with CRM automation (with 3 no-code workflow ideas"
              },
              {
                "url": "https://n8n.io/blog/5-tasks-you-can-automate-with-notion-api/",
                "icon": "⚡️",
                "label": "5 tasks you can automate with the new Notion API "
              },
              {
                "url": "https://n8n.io/blog/automate-google-apps-for-productivity/",
                "icon": "💡",
                "label": "15 Google apps you can combine and automate to increase productivity"
              },
              {
                "url": "https://n8n.io/blog/how-uproc-scraped-a-multi-page-website-with-a-low-code-workflow/",
                "icon": " 🕸️",
                "label": "How uProc scraped a multi-page website with a low-code workflow"
              },
              {
                "url": "https://n8n.io/blog/building-an-expense-tracking-app-in-10-minutes/",
                "icon": "📱",
                "label": "Building an expense tracking app in 10 minutes"
              },
              {
                "url": "https://n8n.io/blog/the-ultimate-guide-to-automate-your-video-collaboration-with-whereby-mattermost-and-n8n/",
                "icon": "📹",
                "label": "The ultimate guide to automate your video collaboration with Whereby, Mattermost, and n8n"
              },
              {
                "url": "https://n8n.io/blog/5-workflow-automations-for-mattermost-that-we-love-at-n8n/",
                "icon": "🤖",
                "label": "5 workflow automations for Mattermost that we love at n8n"
              },
              {
                "url": "https://n8n.io/blog/learn-to-build-powerful-api-endpoints-using-webhooks/",
                "icon": "🧰",
                "label": "Learn to Build Powerful API Endpoints Using Webhooks"
              },
              {
                "url": "https://n8n.io/blog/how-a-membership-development-manager-automates-his-work-and-investments/",
                "icon": "📈",
                "label": "How a Membership Development Manager automates his work and investments"
              },
              {
                "url": "https://n8n.io/blog/a-low-code-bitcoin-ticker-built-with-questdb-and-n8n-io/",
                "icon": "📈",
                "label": "A low-code bitcoin ticker built with QuestDB and n8n.io"
              },
              {
                "url": "https://n8n.io/blog/how-to-set-up-a-ci-cd-pipeline-with-no-code/",
                "icon": "🎡",
                "label": "How to set up a no-code CI/CD pipeline with GitHub and TravisCI"
              },
              {
                "url": "https://n8n.io/blog/benefits-of-automation-and-n8n-an-interview-with-hubspots-hugh-durkin/",
                "icon": "🎖",
                "label": "Benefits of automation and n8n: An interview with HubSpot's Hugh Durkin"
              },
              {
                "url": "https://n8n.io/blog/how-goomer-automated-their-operations-with-over-200-n8n-workflows/",
                "icon": "🛵",
                "label": "How Goomer automated their operations with over 200 n8n workflows"
              },
              {
                "url": "https://n8n.io/blog/aws-workflow-automation/",
                "label": "7 no-code workflow automations for Amazon Web Services"
              }
            ],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Data Transformation"
            ]
          }
        }
      },
      "group": "[\"input\"]",
      "defaults": {
        "name": "Edit Fields"
      },
      "iconData": {
        "icon": "pen",
        "type": "icon"
      },
      "displayName": "Edit Fields (Set)",
      "typeVersion": 3,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 112,
      "icon": "fa:map-signs",
      "name": "n8n-nodes-base.switch",
      "codex": {
        "data": {
          "alias": [
            "Router",
            "If",
            "Path",
            "Filter",
            "Condition",
            "Logic",
            "Branch",
            "Case"
          ],
          "resources": {
            "generic": [
              {
                "url": "https://n8n.io/blog/2021-the-year-to-automate-the-new-you-with-n8n/",
                "icon": "☀️",
                "label": "2021: The Year to Automate the New You with n8n"
              },
              {
                "url": "https://n8n.io/blog/how-to-get-started-with-crm-automation-and-no-code-workflow-ideas/",
                "icon": "👥",
                "label": "How to get started with CRM automation (with 3 no-code workflow ideas"
              },
              {
                "url": "https://n8n.io/blog/build-your-own-virtual-assistant-with-n8n-a-step-by-step-guide/",
                "icon": "👦",
                "label": "Build your own virtual assistant with n8n: A step by step guide"
              },
              {
                "url": "https://n8n.io/blog/automation-for-maintainers-of-open-source-projects/",
                "icon": "🏷️",
                "label": "How to automatically manage contributions to open-source projects"
              }
            ],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Flow"
            ]
          }
        }
      },
      "group": "[\"transform\"]",
      "defaults": {
        "name": "Switch",
        "color": "#506000"
      },
      "iconData": {
        "icon": "map-signs",
        "type": "icon"
      },
      "displayName": "Switch",
      "typeVersion": 3,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    },
    {
      "id": 837,
      "icon": "fa:sign-out-alt",
      "name": "n8n-nodes-base.executeWorkflowTrigger",
      "codex": {
        "data": {
          "resources": {
            "generic": [],
            "primaryDocumentation": [
              {
                "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger/"
              }
            ]
          },
          "categories": [
            "Core Nodes"
          ],
          "nodeVersion": "1.0",
          "codexVersion": "1.0",
          "subcategories": {
            "Core Nodes": [
              "Helpers"
            ]
          }
        }
      },
      "group": "[\"trigger\"]",
      "defaults": {
        "name": "When Executed by Another Workflow",
        "color": "#ff6d5a"
      },
      "iconData": {
        "icon": "sign-out-alt",
        "type": "icon"
      },
      "displayName": "Execute Workflow Trigger",
      "typeVersion": 1,
      "nodeCategories": [
        {
          "id": 9,
          "name": "Core Nodes"
        }
      ]
    }
  ],
  "categories": [
    {
      "id": 28,
      "name": "IT Ops"
    }
  ],
  "image": []
}